#name: Astronomer CI - Deploy code (Multiple Branches) - dag only
#
#on:
#  push:
#    paths: ['dags/**']
#    branches: [dev,main]
#  pull_request:
#    types:
#      - closed
#    branches: [main]
#    paths: ['dags/**']
#
#jobs:
#  jobs:
#    paths-filter:
#      runs-on: ubuntu-latest
#      outputs:
#        output1: ${{ steps.filter.outputs.workflows }}
#      steps:
#        - uses: actions/checkout@v2
#        - uses: dorny/paths-filter@v2
#          id: filter
#          with:
#            filters: |
#              workflows:
#                - 'dags/**'
#        # run only if 'workflows' files were changed
#        - name: workflow tests
#          if: steps.filter.outputs.workflows == 'true'
#          run: echo "Workflow file"
#
#        # run only if not 'workflows' files were changed
#        - name: not workflow tests
#          if: steps.filter.outputs.workflows != 'true'
#          run: echo "NOT workflow file"
#  dev-push:
#    environment: customer-success-dev
#    if: github.ref == 'refs/heads/dev'
#    env:
#      ## Sets DEV Deployment API key credentials as environment variables
#      ASTRONOMER_KEY_ID: ${{ secrets.GCP_DEV_ASTRONOMER_KEY_ID }}
#      ASTRONOMER_KEY_SECRET: ${{ secrets.GCP_DEV_ASTRONOMER_KEY_SECRET }}
#    runs-on: ubuntu-latest
#    steps:
#    - name: checkout repo
#      uses: actions/checkout@v3
#    uses: dorny/paths-filter@v2
#    - name: Deploy to Astro
#      run: |
#        curl -sSL install.astronomer.io | sudo bash -s
#        astro deploy -f --dags
#  prod-push:
#    environment: customer-success
#    if: github.ref == 'refs/heads/main'
#    env:
#      ## Sets PROD Deployment API key credentials as environment variables
#      ASTRONOMER_KEY_ID: ${{ secrets.GCP_ASTRONOMER_KEY_ID }}
#      ASTRONOMER_KEY_SECRET: ${{ secrets.GCP_ASTRONOMER_KEY_SECRET }}
#    runs-on: ubuntu-latest
#    steps:
#    - name: checkout repo
#      uses: actions/checkout@v3
#    - name: Deploy to Astro
#      run: |
#        curl -sSL install.astronomer.io | sudo bash -s
#        astro deploy -f --dags
#
